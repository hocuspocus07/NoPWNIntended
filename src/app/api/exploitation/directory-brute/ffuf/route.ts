import { runFFUF } from "@/lib/runners/runFFUF"
import { NextResponse } from "next/server"
import { createClient } from "@/utils/supabase/server" 

export async function POST(request: Request) {
  try {
    const supabase = await createClient() 

    const {
      data: { user },
      error: userError,
    } = await supabase.auth.getUser()

    if (userError || !user) {
      console.error("FFUF API: Authentication required or user not found", userError?.message)
      return NextResponse.json({ error: "Authentication required" }, { status: 401 })
    }

    const body = await request.json()
    const scanResults = await runFFUF(
      body.url,
      body.wordlist,
      body.threads,
      body.extensions,
      body.recursive,
      body.followRedirects,
    )

    if (!scanResults.success) {
      return NextResponse.json(
        {
          error: scanResults.error || "FFUF scan failed",
        },
        { status: 500 },
      )
    }

    const output = scanResults.data?.stdout || scanResults.data?.stderr || "No output available"

    return NextResponse.json({
      data: output,
    })
  } catch (error) {
    console.error("FFUF API: Error processing request:", error)
    return NextResponse.json(
      {
        error: error instanceof Error ? error.message : "unknown error",
      },
      { status: 500 },
    )
  }
}
