FROM kalilinux/kali-rolling

# Update and install core utilities, Python and git
RUN apt-get update && \
    apt-get install -y \
    wget \
    curl \
    pipx \
    python3 python3-pip git \
    python3-fuzzywuzzy && \
rm -rf /var/lib/apt/lists/*

# Install Node.js and npm (for Next.js and dev workflows)
# This uses Debian/Kali repositories to ensure compatibility.
RUN apt-get update && \
    apt-get install -y nodejs npm && \
    node -v && npm -v

# Log directory for tools
RUN mkdir -p /var/log && touch /var/log/nmap_scan.log && chmod 666 /var/log/nmap_scan.log

# Install security tools and wordlists
RUN apt-get update && \
    apt-get install -y \
    seclists wordlists \
    tshark wireshark-common jq\
    nmap subfinder amass assetfinder dnsgen whois \
    nikto wpscan skipfish ffuf gobuster dirb dirsearch \
    sqlmap hashcat john testssl.sh \
    mongodb-clients \
    sleuthkit \
    binwalk \
    foremost \
    testdisk \
    radare2 \
    binutils \
    gdb \
    gdb-multiarch\
    libewf2 \
    ewf-tools \
    jq \
    && rm -rf /var/lib/apt/lists/*

RUN apt-get update && \
    apt-get install -y vim-common && \
    rm -rf /var/lib/apt/lists/*
    
RUN gunzip -c /usr/share/wordlists/rockyou.txt.gz > /usr/share/wordlists/rockyou.txt

# Download additional Nmap NSE scripts and update script database
RUN cd /usr/share/nmap/scripts && \
    wget https://svn.nmap.org/nmap/scripts/vulners.nse && \
    nmap --script-updatedb

# Clone extra tools from GitHub
RUN git clone https://github.com/maurosoria/dirsearch.git /opt/dirsearch && \
    git clone https://github.com/s0md3v/XSStrike /opt/XSStrike && \
    git clone https://github.com/torque59/Nosql-Exploitation-Framework /opt/nosql-exploitation-framework

# Install Python dependencies for dirsearch
RUN apt-get update && \
    apt-get install -y python3-setuptools python3-psycopg2 && \
    rm -rf /var/lib/apt/lists/*

# Install additional Python packages for dirsearch
RUN cd /opt/dirsearch && \
    python3 -m pip install --break-system-packages -r requirements.txt

RUN git clone --depth 1 https://github.com/drwetter/testssl.sh.git /opt/testssl.sh \
    && chmod +x /opt/testssl.sh/testssl.sh
# Use pipx for Python utilities
RUN pipx install dnsgen && \
    pipx ensurepath

# Install OSINT tools (holehe, maigret, sherlock, exiftool)
RUN apt-get update && \
    apt-get install -y \
    exiftool \ 
    && rm -rf /var/lib/apt/lists/*

# Install Python-based OSINT tools (holehe, maigret, sherlock)
RUN apt-get update && apt-get install -y pipx

RUN pipx install holehe
RUN pipx install sherlock-project
ENV PATH="/root/.local/bin:${PATH}"

RUN echo "=== OSINT Tools Verification ===" && \
    echo "ExifTool: $(exiftool -ver)" && \
    echo "holehe: $(holehe --version 2>&1)" && \
    echo "sherlock: $(sherlock --version 2>&1)"
# Set up working directory and add custom tools to PATH
WORKDIR /app
ENV PATH="/opt/dirsearch:/opt/XSStrike:/opt/NoSQLMap:/opt/nosql-exploitation-framework:${PATH}"

COPY package.json package-lock.json ./
RUN npm install
COPY . .

# (Optional) Installation verification for troubleshooting
RUN echo "=== Tool Verification ===" && \
    echo "Nmap: $(nmap --version | head -n 1)" && \
    echo "Subfinder: $(subfinder -version 2>&1)" && \
    echo "Amass: $(amass -version 2>&1)" && \
    echo "Assetfinder: installed" && \
    echo "Dnsgen: installed" && \
    echo "Whois: installed" && \
    echo "Nikto: $(nikto -Version 2>&1 | head -n 1)" && \
    echo "WPScan: $(wpscan --version 2>&1)" && \
    echo "Skipfish: installed" && \
    echo "FFuF: $(ffuf -V 2>&1)" && \
    echo "Gobuster: $(gobuster version 2>&1)" && \
    echo "Dirb: installed" && \
    echo "Dirsearch: installed" && \
    echo "SQLMap: $(sqlmap --version 2>&1)" && \
    echo "XSStrike: installed" && \
    echo "Hashcat: $(hashcat --version | head -n 1)" && \
    echo "John: installed" && \
    echo "TestSSL: installed" && \
    echo "jq: $(jq --version)" && \
    echo "All essential tools verified"

# Project note
RUN echo -e "\n\nNote: For NoSQLMap, use the official Docker image:\ndocker run -it codingo/nosqlmap\n" >> /root/README.md

# Copy your project scripts in
COPY docker/scripts/ /docker/scripts/
RUN chmod +x /docker/scripts/*.sh

# If this image should launch your Next.js dev server by default
CMD ["npm", "run", "dev"]
